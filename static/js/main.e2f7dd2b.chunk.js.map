{"version":3,"sources":["components/layout/Navbar.js","components/utility/Searchbar.js","store/actions/searchActions.js","store/actions/types.js","components/utility/Loading.js","store/actions/libraryActions.js","components/utility/MovieCard.js","components/utility/MoviesBox.js","components/layout/Dashboard.js","components/userMovie/AddMovie.js","components/utility/EditMovie.js","components/utility/LibraryCard.js","components/userMovie/Library.js","App.js","serviceWorker.js","store/reducer/libraryReducer.js","store/reducer/searchMovieReducer.js","store/reducer/rootReducer.js","index.js","store/localStorage/localStorage.js"],"names":["Navbar","className","to","Searchbar","handleChange","e","searchMovie","props","target","value","handleSubmit","fetchMovies","setLoading","preventDefault","text","this","onSubmit","type","name","placeholder","onChange","Component","connect","state","movies","dispatch","payload","axios","get","then","response","data","catch","err","console","log","Loading","addMovie","movie","deleteMovie","index","MovieCard","Title","src","Poster","alt","Year","Director","Runtime","Actors","Plot","onClick","library","MoviesBox","content","Response","Dashboard","loading","AddMovie","setState","handleSubmitForm","required","userMovie","EditMovie","handleChangeTextArea","handleSubmitTextArea","keyId","htmlFor","id","row","cols","LibraryCard","edit","handleEdit","handleDelete","Library","length","map","singleMovie","App","exact","path","component","Boolean","window","location","hostname","match","initState","libraryReducer","action","slice","findMovieReducer","rootReducer","combineReducers","searchMovieReducer","middleware","thunk","store","createStore","serializedState","localStorage","getItem","JSON","parse","loadState","composeWithDevTools","applyMiddleware","subscribe","stringify","setItem","alert","saveState","getState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e2f7dd2b.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n  return (\n    <div className=\"header\">\n      <h2>Movie Library</h2>\n      <div className=\"header__buttons\">\n        <Link className=\"header__buttons__button\" to=\"/\">\n          Home\n        </Link>\n        <Link className=\"header__buttons__button\" to=\"/addMovie\">\n          Add Movie\n        </Link>\n        <Link className=\"header__buttons__button\" to=\"/library\">\n          Library\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  searchMovie,\n  fetchMovies,\n  setLoading,\n} from '../../store/actions/searchActions';\n\nclass Searchbar extends Component {\n  handleChange = (e) => {\n    const { searchMovie } = this.props;\n    searchMovie(e.target.value);\n  };\n\n  handleSubmit = (e) => {\n    const { fetchMovies, setLoading, searchMovie } = this.props;\n    e.preventDefault();\n    fetchMovies(this.props.text);\n    setLoading();\n    searchMovie('');\n  };\n  render() {\n    const { text } = this.props;\n    return (\n      <div className=\"dashboard\">\n        <h2>Find movie</h2>\n        <div className=\"dashboard__inputForm\">\n          <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Enter movie title\"\n              value={this.props.text}\n              onChange={this.handleChange}\n            />\n            <button type=\"submit\">Search</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  text: state.movies.text,\n});\n\nexport default connect(mapStateToProps, {\n  searchMovie,\n  fetchMovies,\n  setLoading,\n})(Searchbar);\n","import { SEARCH_MOVIE, FETCH_MOVIES, LOADING } from './types';\nimport axios from 'axios';\n\nexport const searchMovie = (text) => (dispatch) => {\n  dispatch({\n    type: SEARCH_MOVIE,\n    payload: text,\n  });\n};\n\nexport const fetchMovies = (text) => (dispatch) => {\n  axios\n    .get(`https://www.omdbapi.com/?apikey=99a773aa&t=${text}`)\n    .then((response) =>\n      dispatch({\n        type: FETCH_MOVIES,\n        payload: response.data,\n      })\n    )\n    .catch((err) => console.log(err));\n};\n\nexport const setLoading = () => {\n  return {\n    type: LOADING,\n  };\n};\n","export const SEARCH_MOVIE = 'SEARCH_MOVIE';\nexport const FETCH_MOVIES = 'FETCH_MOVIES';\nexport const LOADING = 'LOADING';\nexport const ADD_MOVIE = 'ADD_MOVIE';\nexport const DELETE_MOVIE = 'DELETE_MOVIE';\nexport const USER_MOVIE = 'USER_MOVIE';\n","import React from 'react';\n\nconst Loading = () => {\n  return (\n    <div className=\"loading\">\n      <h2>Loading...</h2>\n    </div>\n  );\n};\n\nexport default Loading;\n","import { ADD_MOVIE, DELETE_MOVIE, USER_MOVIE } from './types';\n\nexport const addMovie = (movie) => (dispatch) => {\n  dispatch({\n    type: ADD_MOVIE,\n    payload: movie,\n  });\n};\n\nexport const deleteMovie = (index) => (dispatch) => {\n  dispatch({\n    type: DELETE_MOVIE,\n    payload: index,\n  });\n};\n\nexport const userMovie = (movie) => (dispatch) => {\n  dispatch({\n    type: USER_MOVIE,\n    payload: movie,\n  });\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addMovie } from '../../store/actions/libraryActions';\n\nclass MovieCard extends Component {\n  handleSubmit = () => {\n    const { movies } = this.props;\n    this.props.addMovie(movies);\n  };\n  render() {\n    const { movies } = this.props;\n    return (\n      <div className=\"movieCard\">\n        <h2>{movies.Title}</h2>\n        <div className=\"movieCard--poster\">\n          <img src={movies.Poster} alt=\"Movie Poster\" />\n        </div>\n        <p>\n          <span>Year:</span> {movies.Year}\n        </p>\n        <p>\n          <span>Director:</span> {movies.Director}\n        </p>\n        <p>\n          <span>Runtime:</span> {movies.Runtime}\n        </p>\n        <p>\n          <span>Actors:</span> {movies.Actors}\n        </p>\n        <p>\n          <span>Plot:</span> {movies.Plot}\n        </p>\n        <div className=\"movieCard--addButton\">\n          <button onClick={this.handleSubmit}>Add to library</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  movies: state.movies.movies,\n  library: state.library.library,\n});\nexport default connect(mapStateToProps, { addMovie })(MovieCard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MovieCard from './MovieCard';\n\nclass MoviesBox extends Component {\n  render() {\n    const { movies } = this.props;\n    let content = '';\n    content = movies.Response == 'True' ? <MovieCard /> : null;\n    return <div className=\"movieBox\">{content}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  movies: state.movies.movies,\n});\n\nexport default connect(mapStateToProps)(MoviesBox);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Searchbar from '../utility/Searchbar';\nimport Loading from '../utility/Loading';\nimport MoviesBox from '../utility/MoviesBox';\n\nclass Dashboard extends Component {\n  render() {\n    const { loading } = this.props;\n    return (\n      <div className=\"dashboard\">\n        <Searchbar />\n        {loading ? <Loading /> : <MoviesBox />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.movies.loading,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { userMovie, addMovie } from '../../store/actions/libraryActions';\n\nclass AddMovie extends Component {\n  state = {\n    Title: '',\n    Year: '',\n    Director: '',\n    Runtime: '',\n    Actors: '',\n    Plot: '',\n  };\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmitForm = (e) => {\n    const { addMovie } = this.props;\n    e.preventDefault();\n    addMovie(this.state);\n    this.setState({\n      Title: '',\n      Year: '',\n      Director: '',\n      Runtime: '',\n      Actors: '',\n      Plot: '',\n    });\n  };\n\n  render() {\n    const { Title, Year, Director, Runtime, Actors, Plot } = this.state;\n\n    return (\n      <div className=\"addMovie\">\n        <h2>Add your movie</h2>\n        <form onSubmit={this.handleSubmitForm}>\n          <label>\n            <p>Title</p>\n            <input\n              type=\"text\"\n              name=\"Title\"\n              value={Title}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <label>\n            <p>Year</p>\n            <input\n              type=\"text\"\n              name=\"Year\"\n              value={Year}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <label>\n            <p>Director</p>\n            <input\n              type=\"text\"\n              name=\"Director\"\n              value={Director}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <label>\n            <p>Plot</p>\n            <input\n              type=\"text\"\n              name=\"Plot\"\n              value={Plot}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <label>\n            <p>Runtime</p>\n            <input\n              type=\"text\"\n              name=\"Runtime\"\n              value={Runtime}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            <p>Actors</p>\n            <input\n              type=\"text\"\n              name=\"Actors\"\n              value={Actors}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className=\"addMovie--button\">\n            <button type=\"submit\">Submit</button>\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  userMovie: state.library.userMovie,\n});\n\nexport default connect(mapStateToProps, { addMovie })(AddMovie);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addMovie, deleteMovie } from '../../store/actions/libraryActions';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    const { library, keyId } = this.props;\n    this.state = {\n      Title: library[keyId].Title,\n      Year: library[keyId].Year,\n      Director: library[keyId].Director,\n      Runtime: library[keyId].Runtime,\n      Actors: library[keyId].Actors,\n      Plot: library[keyId].Plot,\n    };\n  }\n  handleChangeTextArea = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n    console.log(this.state);\n  };\n\n  handleSubmitTextArea = (e) => {\n    e.preventDefault();\n    this.props.addMovie(this.state);\n    this.props.deleteMovie(this.props.keyId);\n  };\n\n  render() {\n    // console.log(this.props.library);\n    // console.log(this.props.keyId);\n    const { library, keyId } = this.props;\n    const { Title, Year, Director, Runtime, Actors, Plot } = this.state;\n    return (\n      <div className=\"editMovie\">\n        <h2>EditMovie</h2>\n        <div className=\"editMovie__textIputs\">\n          <div className=\"textInputs--title\">\n            <form onSubmit={this.handleSubmitTextArea}>\n              <label htmlFor=\"title\">Edit title</label>\n              <textarea\n                id=\"Title\"\n                name=\"Title\"\n                value={Title}\n                onChange={this.handleChangeTextArea}\n                row=\"20\"\n                cols=\"40\"\n              />\n              <label htmlFor=\"year\">Edit year</label>\n              <textarea\n                id=\"Year\"\n                name=\"Year\"\n                value={Year}\n                onChange={this.handleChangeTextArea}\n                row=\"2\"\n                cols=\"20\"\n              />\n              <label htmlFor=\"director\">Edit director</label>\n              <textarea\n                id=\"Director\"\n                name=\"Director\"\n                value={Director}\n                onChange={this.handleChangeTextArea}\n                row=\"2\"\n                cols=\"20\"\n              />\n              <label htmlFor=\"runtime\">Edit runtime</label>\n              <textarea\n                id=\"Runtime\"\n                name=\"Runtime\"\n                value={Runtime}\n                onChange={this.handleChangeTextArea}\n                row=\"2\"\n                cols=\"20\"\n              />\n\n              <label htmlFor=\"actors\">Edit actors</label>\n              <textarea\n                id=\"Actors\"\n                name=\"Actors\"\n                value={Actors}\n                onChange={this.handleChangeTextArea}\n                row=\"2\"\n                cols=\"20\"\n              />\n              <label htmlFor=\"plot\">Edit plot</label>\n              <textarea\n                id=\"Plot\"\n                name=\"Plot\"\n                value={Plot}\n                onChange={this.handleChangeTextArea}\n                row=\"2\"\n                cols=\"20\"\n              />\n              <label>\n                <button type=\"submit\">Submit</button>\n              </label>\n            </form>\n\n            {/* {library[keyId].Title} */}\n            {/* </textarea> */}\n          </div>\n          {/* <div className=\"textInputs--year\">\n            <label htmlFor=\"year\">Edit year</label>\n            <textarea\n              id=\"year\"\n              name=\"year\"\n              //value={Year}\n              defaulValue={library[keyId].Title}\n              onChange={this.handleChange}\n              row=\"2\"\n              cols=\"20\"\n            >\n              {library[keyId].Year}\n            </textarea>\n          </div>\n          <div className=\"textInputs--director\">\n            <label htmlFor=\"director\">Edit director</label>\n            <textarea\n              id=\"director\"\n              name=\"director\"\n              //value={Director}\n              onChange={this.handleChange}\n              row=\"2\"\n              cols=\"20\"\n            >\n              {library[keyId].Director}\n            </textarea>\n          </div>\n          <div className=\"textInputs--runtime\">\n            <label htmlFor=\"runtime\">Edit runtime</label>\n            <textarea\n              id=\"runtime\"\n              name=\"runtime\"\n              //value={Runtime}\n              onChange={this.handleChange}\n              row=\"2\"\n              cols=\"20\"\n            >\n              {library[keyId].Runtime}\n            </textarea>\n          </div>\n          <div className=\"textInputs--actors\">\n            <label htmlFor=\"actors\">Edit actors</label>\n            <textarea\n              id=\"actors\"\n              name=\"actors\"\n              //value={Actors}\n              onChange={this.handleChange}\n              row=\"2\"\n              cols=\"20\"\n            >\n              {library[keyId].Actors}\n            </textarea>\n          </div>\n          <div className=\"textInputs--plot\">\n            <label htmlFor=\"plot\">Edit plot</label>\n            <textarea\n              id=\"plot\"\n              name=\"plot\"\n              // value={Plot}\n              // onChange={this.handleChange}\n              row=\"2\"\n              cols=\"20\"\n            >\n              {library[keyId].Plot}\n            </textarea>\n          </div> */}\n          {/* <div className=\"textInputs--button\">\n            <button onClick={this.handleSubmitTextArea}>Submit</button>\n          </div> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  library: state.library.library,\n});\n\nexport default connect(mapStateToProps, { addMovie, deleteMovie })(EditMovie);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deleteMovie } from '../../store/actions/libraryActions';\nimport EditMovie from '../../components/utility/EditMovie';\n\nclass LibraryCard extends Component {\n  state = {\n    edit: false,\n  };\n\n  handleEdit = () => {\n    this.setState({\n      edit: true,\n    });\n    //console.log(this.props.keyId);\n  };\n\n  handleDelete = () => {\n    this.props.deleteMovie(this.props.keyId);\n  };\n\n  render() {\n    const { library, keyId } = this.props;\n    console.log(this.state.edit);\n    // console.log(keyId);\n    return (\n      <div className=\"libraryCard\">\n        <div className=\"libraryCard__poster\">\n          <img src={library.Poster} alt=\"Movie Poster\" />\n        </div>\n        <div className=\"libraryCard__details\">\n          <h2>{library.Title}</h2>\n          <p>\n            <span>Year:</span> {library.Year}\n          </p>\n          <p>\n            <span>Director:</span> {library.Director}\n          </p>\n          <p>\n            <span>Runtime:</span> {library.Runtime}\n          </p>\n          <p>\n            <span>Actors:</span> {library.Actors}\n          </p>\n        </div>\n        <div className=\"libraryCard__plot\">\n          <p>\n            <span>Plot:</span> {library.Plot}\n          </p>\n        </div>\n        <div className=\"libraryCard__buttons\">\n          {/* <Link to=\"/editMovie\">Edit</Link> */}\n          <button onClick={this.handleEdit}>Edit</button>\n\n          <button onClick={this.handleDelete}>Delete</button>\n        </div>\n        <div>{this.state.edit ? <EditMovie keyId={keyId} /> : null}</div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { deleteMovie })(LibraryCard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport LibraryCard from '../utility/LibraryCard';\n\nclass Library extends Component {\n  render() {\n    const { library } = this.props;\n\n    return library.length === 0 ? (\n      <h2 className=\"libraryWarning\">No movie in library</h2>\n    ) : (\n      library.map((singleMovie, index) => (\n        <div className=\"library\">\n          <LibraryCard library={singleMovie} keyId={index} />\n        </div>\n      ))\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  library: state.library.library,\n});\n\nexport default connect(mapStateToProps)(Library);\n","import React from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/layout/Dashboard';\nimport AddMovie from './components/userMovie/AddMovie';\nimport Library from './components/userMovie/Library';\nimport EditMovie from './components/utility/EditMovie';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/addMovie\" component={AddMovie} />\n          <Route path=\"/library\" component={Library} />\n          <Route path=\"/editMovie\" component={EditMovie} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD_MOVIE, DELETE_MOVIE, USER_MOVIE } from '../actions/types';\n\nconst initState = {\n  library: [],\n  // userMovie: {\n  //   Title: '',\n  //   Year: '',\n  //   Director: '',\n  //   Runtime: '',\n  //   Actors: '',\n  //   Plot: '',\n  // },\n};\n\nconst libraryReducer = (state = initState, action) => {\n  switch (action.type) {\n    case ADD_MOVIE:\n      return {\n        ...state,\n        library: [...state.library, action.payload],\n      };\n    case DELETE_MOVIE:\n      const index = action.payload;\n      return {\n        ...state,\n        library: [\n          ...state.library.slice(0, index),\n          ...state.library.slice(index + 1),\n        ],\n      };\n    // case USER_MOVIE:\n    //   return {\n    //     ...state,\n    //     userMovie: action.payload,\n    //   };\n    default:\n      return state;\n  }\n};\n\nexport default libraryReducer;\n","import { SEARCH_MOVIE, FETCH_MOVIES, LOADING } from '../actions/types';\n\nconst initState = {\n  text: '',\n  movies: [],\n  loading: false,\n};\n\nconst findMovieReducer = (state = initState, action) => {\n  switch (action.type) {\n    case SEARCH_MOVIE:\n      return {\n        ...state,\n        text: action.payload,\n        loading: false,\n      };\n    case FETCH_MOVIES:\n      return {\n        ...state,\n        movies: action.payload,\n        loading: false,\n      };\n    case LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default findMovieReducer;\n","import libraryReducer from './libraryReducer';\nimport searchMovieReducer from './searchMovieReducer';\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n  library: libraryReducer,\n  movies: searchMovieReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducer/rootReducer';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { saveState, loadState } from './store/localStorage/localStorage';\n\nconst middleware = [thunk];\n//const initialState = {};\nconst store = createStore(\n  rootReducer,\n  loadState(),\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nstore.subscribe(() => {\n  saveState({\n    library: store.getState().library,\n  });\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    alert(err);\n  }\n};\n"],"sourceRoot":""}